//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: Microsoft.Xrm.Sdk.Client.ProxyTypesAssemblyAttribute()]

namespace AlbanianXrm.Datamodel
{
	
	
	/// <summary>
	/// Business that represents a customer or potential customer. The company that is billed in business transactions.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("account")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.91")]
	public partial class Account : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Account() : 
				base(EntityLogicalName)
		{
		}
		
		/// <summary>
		/// EntityLogicalName
		/// </summary>
		public const string EntityLogicalName = "account";
		
		/// <summary>
		/// EntityLogicalCollectionName
		/// </summary>
		public const string EntityLogicalCollectionName = "accounts";
		
		/// <summary>
		/// EntitySetName
		/// </summary>
		public const string EntitySetName = "accounts";
		
		/// <summary>
		/// EntityTypeCode
		/// </summary>
		public const int EntityTypeCode = 1;
		
		/// <summary>
		/// Unique identifier of the account.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public System.Nullable<System.Guid> AccountId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("accountid");
			}
			set
			{
				this.SetAttributeValue("accountid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		/// <summary>
		/// Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.AccountId = value;
			}
		}
		
		/// <summary>
		/// Type the company or business name.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofemployees")]
		public System.Nullable<int> NumberOfEmployees
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("numberofemployees");
			}
			set
			{
				this.SetAttributeValue("numberofemployees", value);
			}
		}
		
		/// <summary>
		/// Choose the primary contact for the account to provide quick access to contact details.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
		public Microsoft.Xrm.Sdk.EntityReference PrimaryContactId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("primarycontactid");
			}
			set
			{
				this.SetAttributeValue("primarycontactid", value);
			}
		}
		
		/// <summary>
		/// Fields
		/// </summary>
		public sealed class Fields
		{
			
			/// <summary>
			/// Unique identifier of the account.
			/// </summary>
			public const string AccountId = "accountid";
			
			/// <summary>
			/// Id
			/// </summary>
			public const string Id = "accountid";
			
			/// <summary>
			/// Type the company or business name.
			/// </summary>
			public const string Name = "name";
			
			/// <summary>
			/// Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.
			/// </summary>
			public const string NumberOfEmployees = "numberofemployees";
			
			/// <summary>
			/// Choose the primary contact for the account to provide quick access to contact details.
			/// </summary>
			public const string PrimaryContactId = "primarycontactid";
			
			/// <summary>
			/// Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.
			/// </summary>
			public const string StateCode = "statecode";
		}
	}
	
	/// <summary>
	/// Person with whom a business unit has a relationship, such as customer, supplier, and colleague.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("contact")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.91")]
	public partial class Contact : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Contact() : 
				base(EntityLogicalName)
		{
		}
		
		/// <summary>
		/// EntityLogicalName
		/// </summary>
		public const string EntityLogicalName = "contact";
		
		/// <summary>
		/// EntityLogicalCollectionName
		/// </summary>
		public const string EntityLogicalCollectionName = "contacts";
		
		/// <summary>
		/// EntitySetName
		/// </summary>
		public const string EntitySetName = "contacts";
		
		/// <summary>
		/// EntityTypeCode
		/// </summary>
		public const int EntityTypeCode = 2;
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("albxrm_myapikey")]
		public System.Nullable<int> albxrm_MyApiKey
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("albxrm_myapikey");
			}
			set
			{
				this.SetAttributeValue("albxrm_myapikey", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the contact.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public System.Nullable<System.Guid> ContactId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("contactid");
			}
			set
			{
				this.SetAttributeValue("contactid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		/// <summary>
		/// Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ContactId = value;
			}
		}
		
		/// <summary>
		/// Type the contact&apos;s first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstname")]
		public string FirstName
		{
			get
			{
				return this.GetAttributeValue<string>("firstname");
			}
			set
			{
				this.SetAttributeValue("firstname", value);
			}
		}
		
		/// <summary>
		/// Type the contact&apos;s last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastname")]
		public string LastName
		{
			get
			{
				return this.GetAttributeValue<string>("lastname");
			}
			set
			{
				this.SetAttributeValue("lastname", value);
			}
		}
		
		/// <summary>
		/// Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcustomerid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentCustomerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcustomerid");
			}
			set
			{
				this.SetAttributeValue("parentcustomerid", value);
			}
		}
		
		/// <summary>
		/// Fields
		/// </summary>
		public sealed class Fields
		{
			
			/// <summary>
			/// 
			/// </summary>
			public const string albxrm_MyApiKey = "albxrm_myapikey";
			
			/// <summary>
			/// Unique identifier of the contact.
			/// </summary>
			public const string ContactId = "contactid";
			
			/// <summary>
			/// Id
			/// </summary>
			public const string Id = "contactid";
			
			/// <summary>
			/// Type the contact&apos;s first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
			/// </summary>
			public const string FirstName = "firstname";
			
			/// <summary>
			/// Type the contact&apos;s last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.
			/// </summary>
			public const string LastName = "lastname";
			
			/// <summary>
			/// Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.
			/// </summary>
			public const string ParentCustomerId = "parentcustomerid";
			
			/// <summary>
			/// Shows whether the contact is active or inactive. Inactive contacts are read-only and can't be edited unless they are reactivated.
			/// </summary>
			public const string StateCode = "statecode";
		}
	}
}
